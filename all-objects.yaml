apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: clientserver
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.10.97:5000/clientcert/clientserver:latest
      generation: null
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: clientserver
    name: clientserver
  spec:
    replicas: 1
    selector:
      app: clientserver
      deploymentconfig: clientserver
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.clientserver.image.entrypoint: '["nginx","-g","daemon
            off;"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: clientserver
          deploymentconfig: clientserver
      spec:
        containers:
        - image: 172.30.10.97:5000/clientcert/clientserver@sha256:0d7dd66eeb680a82418f3011189744770d7d5c2636ce69ba0e05a079f806d846
          imagePullPolicy: Always
          name: clientserver
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - clientserver
        from:
          kind: ImageStreamTag
          name: clientserver:latest
          namespace: clientcert
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: clientserver-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: clientserver
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"clientserver","namespace":"clientcert","selfLink":"/oapi/v1/namespaces/clientcert/deploymentconfigs/clientserver","uid":"c09799c8-b392-11e6-a38c-5254009f9a8b","resourceVersion":"10242","creationTimestamp":"2016-11-26T04:42:35Z","labels":{"app":"clientserver"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{}},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["clientserver"],"from":{"kind":"ImageStreamTag","namespace":"clientcert","name":"clientserver:latest"},"lastTriggeredImage":"172.30.10.97:5000/clientcert/clientserver@sha256:0d7dd66eeb680a82418f3011189744770d7d5c2636ce69ba0e05a079f806d846"}}],"replicas":1,"test":false,"selector":{"app":"clientserver","deploymentconfig":"clientserver"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"clientserver","deploymentconfig":"clientserver"},"annotations":{"openshift.io/container.clientserver.image.entrypoint":"[\"nginx\",\"-g\",\"daemon off;\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"containers":[{"name":"clientserver","image":"172.30.10.97:5000/clientcert/clientserver@sha256:0d7dd66eeb680a82418f3011189744770d7d5c2636ce69ba0e05a079f806d846","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":443,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{}}}},"status":{"latestVersion":1,"details":{"causes":[{"type":"ConfigChange"}]}}}
    creationTimestamp: null
    generation: 1
    labels:
      app: clientserver
      openshift.io/deployment-config.name: clientserver
    name: clientserver-1
  spec:
    replicas: 1
    selector:
      app: clientserver
      deployment: clientserver-1
      deploymentconfig: clientserver
    template:
      metadata:
        annotations:
          openshift.io/container.clientserver.image.entrypoint: '["nginx","-g","daemon
            off;"]'
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: clientserver
          openshift.io/deployment.name: clientserver-1
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: clientserver
          deployment: clientserver-1
          deploymentconfig: clientserver
      spec:
        containers:
        - image: 172.30.10.97:5000/clientcert/clientserver@sha256:0d7dd66eeb680a82418f3011189744770d7d5c2636ce69ba0e05a079f806d846
          imagePullPolicy: Always
          name: clientserver
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: clientserver
    name: clientserver
  spec:
    host: clisec.rhel-cdk.10.1.2.2.xip.io
    port:
      targetPort: 443-tcp
    tls:
      termination: passthrough
    to:
      kind: Service
      name: clientserver
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2016-11-26T04:45:58Z
        status: "True"
        type: Admitted
      host: clisec.rhel-cdk.10.1.2.2.xip.io
      routerName: router
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: clientserver
    name: clientserver
  spec:
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 80
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: clientserver
      deploymentconfig: clientserver
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"clientcert","name":"clientserver-1","uid":"c0af93fe-b392-11e6-a38c-5254009f9a8b","apiVersion":"v1","resourceVersion":"10258"}}
      openshift.io/container.clientserver.image.entrypoint: '["nginx","-g","daemon
        off;"]'
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: clientserver
      openshift.io/deployment.name: clientserver-1
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/scc: anyuid
    creationTimestamp: null
    generateName: clientserver-1-
    labels:
      app: clientserver
      deployment: clientserver-1
      deploymentconfig: clientserver
  spec:
    containers:
    - image: 172.30.10.97:5000/clientcert/clientserver@sha256:0d7dd66eeb680a82418f3011189744770d7d5c2636ce69ba0e05a079f806d846
      imagePullPolicy: Always
      name: clientserver
      ports:
      - containerPort: 80
        protocol: TCP
      - containerPort: 443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SYS_CHROOT
        privileged: false
        seLinuxOptions:
          level: s0:c8,c2
      terminationMessagePath: /dev/termination-log
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-pwm53
        readOnly: true
    dnsPolicy: ClusterFirst
    host: rhel-cdk
    imagePullSecrets:
    - name: default-dockercfg-ovxm3
    nodeName: rhel-cdk
    restartPolicy: Always
    securityContext:
      seLinuxOptions:
        level: s0:c8,c2
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-pwm53
      secret:
        secretName: default-token-pwm53
  status:
    phase: Pending
kind: List
metadata: {}
